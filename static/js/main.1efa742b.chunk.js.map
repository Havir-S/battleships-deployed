{"version":3,"sources":["imgs/gear.svg","blender/allyNormal.png","blender/enemyNormal.png","blender/submarine.png","blender/captain5.png","blender/captainEnemy1.png","imgs/rudder.svg","imgs/exit.svg","imgs/question.svg","blender/allyScared.png","blender/enemyScared.png","components/MAIN_SETTINGS.js","components/SHIP_CREATOR.js","components/setup/ShipConfiguration.js","components/setup/GridConfiguration.js","components/grid/gridSide.js","components/setup/GridConfigurationPreview.js","components/navbar.js","components/middleBar.js","components/setup/setup.js","components/tabTitle.js","components/setup/WelcomeTab.js","components/grid/helpDiv.js","components/grid/grid.js","components/gameTab/gridElementGame.js","components/gameTab/gridGame.js","components/gameTab/historyTab.js","components/gameTab/gameTab.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SETTINGS","ships","carriers","name","amount","health","battleships","cruisers","submarines","destroyers","field","x","y","startValues","startX","startY","STATICVALUES","alphabet_az","alphabet_AZ","numbers","CreateShipObjects","arr","shipsObj","Object","entries","i","length","j","ship","ShipClass","push","healthNumber","this","blocks","deployed","changeValue","bind","blockSet","key","value","firstCoord","direction","deployedShips","maxValues","hpBar","coords","split","coordX","coordY","Number","isHit","thisBlock","block","HealthPreview","props","shipBar","className","style","gridTemplateColumns","React","Component","ShipConfiguration","toUpperCase","onClick","shipChange","hasAdvancedShipSettings","GridConfiguration","options","getOwnPropertyNames","staticValues","src","settingsIcon","alt","toggleAdvancedGridSettings","gridChangeSize","type","onChange","e","gridChangeSizeInput","hasAdvancedGridSettings","defaultValue","changeStartValues","map","el","GridSide","howMany","valuesToCheck","slice","gridPosition","GridElementPreview","GridConfigurationPreview","squares","gridTemplate","Navbar","state","open","handleClick","setState","battleship","smallCaptainAlly","smallCaptainEnemy","wheel","MiddleBar","children","Setup","advancedShipSettings","advancedGridSettings","advancedShipSettingsToggle","advancedGridSettingsToggle","shipNames","shipConfigurations","currentViewedTab","changeCurrentViewedTab","valueType","WelcomeTab","HelpDiv","exit","handler","GridElement","data-coords","handleShipClick","GridElementShip","Grid","choosenShipDiv","choosenShipClass","deploymentDirection","shipHp","helpEnabled","assignShip","handleDeploymentDirection","toggleHelp","classList","remove","target","add","action","handlePlayerDeployedShips","getAttribute","playerDeployedShips","console","log","z","squareCoordX","squareCoordY","deployedShip","hpBlock","shipHpBar","splice","indexOf","playerShips","filter","index","width","classWhenPlacing","data-direction","data-shiphp","disabled","margin","questionMark","GridGameEnemyElement","gridElement","additionalClass","handleEnemyHit","GridGameEnemyShipElement","GridGameShipElement","currentHpBlock","GridElementGame","GridGame","gridPlayerClass","owner","alreadyShotByAi","checkHit","k","handleHit","alreadyShotByPlayer","aiDeployedShips","aiDeployedShip","aiShipHpBar","HistoryTab","historyP","history","text","includes","reload","window","location","GameTab","aiShips","aiShip","randomDirection","randomCoordX","randomCoordY","Math","round","random","ceil","handleAiShips","winner","display","allyCaptain","allyCaptainDefeat","enemyCaptain","enemyCaptainDefeat","tabsInOrder","App","actionsHistory","turn","allShipsHp","gameEnded","checkWinner","handleAiDeployedShips","data","newShips","option","newField","coordinate","test","newCurrentViewedTab","newStartValues","newArr","aiShipToDeploy","every","newHistory","unshift","randomX","randomY","hitGrid","currentTab","hasAdvancedSettings","advancedSettings","advancedSettingsToggle","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1efa742b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gear.d27d156d.svg\";","module.exports = __webpack_public_path__ + \"static/media/allyNormal.95d2e27f.png\";","module.exports = __webpack_public_path__ + \"static/media/enemyNormal.36f8223a.png\";","module.exports = __webpack_public_path__ + \"static/media/submarine.35c38dee.png\";","module.exports = __webpack_public_path__ + \"static/media/captain5.01820855.png\";","module.exports = __webpack_public_path__ + \"static/media/captainEnemy1.eb53902c.png\";","module.exports = __webpack_public_path__ + \"static/media/rudder.26779c0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit.427e08d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.f0a4f4fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/allyScared.2591bd28.png\";","module.exports = __webpack_public_path__ + \"static/media/enemyScared.695a8972.png\";","export const SETTINGS = {\n  ships: {\n    carriers: {\n      name: \"carriers\",\n      amount: 3,\n      health: 1\n    },\n    battleships: {\n      name: \"battleships\",\n      amount: 3,\n      health: 2\n    },\n    cruisers: {\n      name: \"cruisers\",\n      amount: 3,\n      health: 3\n    },\n    submarines: {\n      name: \"submarines\",\n      amount: 2,\n      health: 3\n    },\n    destroyers: {\n      name: \"destroyers\",\n      amount: 1,\n      health: 4\n    }\n  },\n  field: {\n    x: 10,\n    y: 10\n  },\n  startValues: {\n    startX: \"numbers\",\n    startY: \"alphabet_AZ\"\n  }\n\n};\n\nexport const STATICVALUES = {\n  alphabet_az: ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'],\n  alphabet_AZ: ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'],\n  numbers: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],\n}\n","\n\n//We create all the ships here from the main ships object in the App.js\nfunction CreateShipObjects(x) {\n  let arr = [];\n  let shipsObj = Object.entries(x);\n  for (let i = 0; i < shipsObj.length; i++) {\n    for (let j = 0; j < shipsObj[i][1].amount; j++) {\n      let ship = new ShipClass(shipsObj[i][1].name, shipsObj[i][1].health);\n      arr.push(ship);\n    }\n  }\n\n  return arr;\n}\n\nclass ShipClass {\n  constructor(name,healthNumber) {\n    this.name = name;\n    this.healthNumber = healthNumber;\n    this.blocks = [];\n    this.deployed = false;\n    this.changeValue = this.changeValue.bind(this);\n    this.blockSet = this.blockSet.bind(this);\n  }\n\n  changeValue(key,value) {\n    this[key] = value;\n  }\n\n  //this is where we set the hp\n  blockSet(firstCoord,direction,deployedShips,maxValues) {\n    let coords = firstCoord.split(\",\");\n    let coordX = coords[0];\n    let coordY = coords[1];\n    let hpBar;\n    this.blocks = [];\n\n    if (direction === 'x') {\n      for (let i = 0; i < this.healthNumber; i++) {\n        hpBar = {\n          x: Number(coordX) + i,\n          y: Number(coordY),\n          isHit: false\n        }\n        this.blocks.push(hpBar);\n      }\n    } else if (direction ==='y') {\n      for (let j = 0; j < this.healthNumber; j++) {\n        hpBar = {\n          x: Number(coordX),\n          y: Number(coordY) + j,\n          isHit: false\n        }\n        this.blocks.push(hpBar);\n      }\n    }\n\n    //Check if coords do not overlapse!\n\n    //we're checking for all the hpblocks\n    for (let thisBlock of this.blocks) {\n      let coordX = thisBlock.x;\n      let coordY = thisBlock.y;\n      //checking for all the deployed ships\n      if(thisBlock.x > maxValues.y || thisBlock.y > maxValues.x) {\n        this.blocks = [];\n        return false;\n      }\n    for (let ship of deployedShips) {\n\n      //checking the deployed ships coords\n      for (let block of ship.blocks) {\n        let {x, y} = block;\n        if ((x === coordX && y === coordY) || coordX > maxValues.y || coordY > maxValues.x) {\n          this.blocks = [];\n          return false;\n        }\n      }\n    }\n  }\n\n\n    return true;\n  }\n}\n\nexport {CreateShipObjects, ShipClass};\nexport default ShipClass;\n","import React from 'react';\n\nclass HealthPreview extends React.Component {\n\n  render() {\n\n    let health = this.props.health\n    let shipBar = [];\n    for (var i = 0; i < health; i++) {\n      shipBar.push(\n        <div className=\"grid-preview-element\" key={i} />\n      )\n    }\n    return (\n      <div className=\"grid-preview\" style={{gridTemplateColumns : `repeat(${health}, 1fr)`}}>\n      {shipBar}\n      </div>\n    )\n  }\n}\n\nexport default class ShipConfiguration extends React.Component {\n  render() {\n    return (\n      <div className='ship-row'>\n        <span>{this.props.ship.name.toUpperCase()} </span>\n\n        <div className='ship-config'>\n          <span className='signAction' onClick={() => this.props.shipChange('subtract', 'amount', this.props.ship.name)}>-</span>\n          <span>{this.props.ship.amount}</span>\n          <span className='signAction' onClick={() => this.props.shipChange('add', 'amount', this.props.ship.name)}>+ </span>\n        </div>\n        {this.props.hasAdvancedShipSettings &&\n        <div className='ship-config'>\n          <span className='signAction' onClick={() => this.props.shipChange('subtract', 'health', this.props.ship.name)}> -</span>\n          <span>{this.props.ship.health}</span>\n          <span className='signAction' onClick={() => this.props.shipChange('add', 'health', this.props.ship.name)}>+</span>\n        </div>\n      }\n\n      <HealthPreview health={this.props.ship.health} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport settingsIcon from '../../imgs/gear.svg';\n\n\nexport default class GridConfiguration extends React.Component {\n\n  render() {\n    let { x, y } = this.props.field;\n    let options = Object.getOwnPropertyNames(this.props.staticValues);\n    return (\n      <>\n      <h2>FIELD SETTINGS</h2>\n\n      <div className='p-title'>\n      Size\n      <div className='gearIcon-container'>\n        <img className='gearIcon' src={settingsIcon} alt='Show Advanced Grid Options' onClick={this.props.toggleAdvancedGridSettings} />\n      </div>\n      </div>\n      <p className='p-settings'>\n        x:\n        <span className='signAction' onClick={() => this.props.gridChangeSize('y','subtract')}>-</span>\n        <input type='text' value={y} onChange={(e) => this.props.gridChangeSizeInput(e,'y')} />\n        <span className='signAction' onClick={() => this.props.gridChangeSize('y','add')}>+</span>\n      </p>\n\n      <p className='p-settings'>\n        y:\n        <span className='signAction' onClick={() => this.props.gridChangeSize('x','subtract')}>-</span>\n        <input type='text' value={x} onChange={(e) => this.props.gridChangeSizeInput(e,'x')}/>\n        <span className='signAction' onClick={() => this.props.gridChangeSize('x','add')}>+</span>\n      </p>\n\n\n\n      {this.props.hasAdvancedGridSettings ?\n        <>\n          <p className='p-title'>Naming</p>\n          <p className='p-settings'>\n            x:\n            <select name='startX' defaultValue={this.props.startValues['startX']} onChange={this.props.changeStartValues}>\n            {options.map((el) => <option value={el} key={el}>{el}</option> )}\n            </select>\n          </p>\n          <p className='p-settings'>\n            y:\n            <select name='startY' defaultValue={this.props.startValues['startY']} onChange={this.props.changeStartValues}>\n            {options.map((el) => <option value={el} key={el}>{el}</option> )}\n            </select>\n          </p>\n        </> :\n        <></>\n      }\n\n      </>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class GridSide extends React.Component {\n\n\n  render() {\n    let howMany = this.props.maxValues[this.props.valuesToCheck];\n    let staticValues = this.props.staticValues.slice(0, howMany );\n    // FIXME: A fast fix for the X bar, values for some reason don't react to auto-fill/auto-fit values in css and have to manually specify the amount of boxes\n\n    return (\n      <>\n      { this.props.valuesToCheck === 'y' ?\n        <div className={`grid-side ` + this.props.gridPosition} style={{gridTemplateColumns: `repeat(${howMany}, 1fr)`}}>\n          {staticValues.map((el) => <div key={el}>{el}</div>)}\n          </div> :\n\n          <div className={`grid-side ` + this.props.gridPosition}>\n            {staticValues.map((el) => <div key={el}>{el}</div>)}\n          </div>\n\n      }\n\n      </>\n    )\n  }\n}\n","import React from 'react';\r\nimport GridSide from '../grid/gridSide.js';\r\n\r\nclass GridElementPreview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-preview-element\" />\r\n    )\r\n  }\r\n}\r\n\r\nexport default class GridConfigurationPreview extends React.Component {\r\n\r\n  render() {\r\n    let squares = [];\r\n    let {x, y} = this.props.maxValues;\r\n\r\n    for (let i = 1; i <= x; i++) {\r\n      //y coordinate FOR\r\n      for (let j = 1; j <= y; j++) {\r\n          squares.push(<GridElementPreview key={`${j},${i}`}/>)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='grid-preview-container'>\r\n      <p>GRID PREVIEW</p>\r\n        <div className='grid-preview' style={{gridTemplate: `repeat(${x}, 1fr) / repeat(${y}, 1fr)`}}>\r\n\r\n          {squares}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport battleship from '../blender/submarine.png';\r\nimport smallCaptainAlly from '../blender/captain5.png';\r\nimport smallCaptainEnemy from '../blender/captainEnemy1.png';\r\nimport wheel from '../imgs/rudder.svg';\r\n\r\nexport default class Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      open: !this.state.open\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-container\">\r\n        <nav className='main-nav'>\r\n\r\n          <div className='logo-div'>\r\n            <img className='logo-ship' src={battleship} alt='battleship' />\r\n            <img className='mini-soldier mini-soldier-left' src={smallCaptainAlly} alt='soldier' />\r\n            <img className='mini-soldier mini-soldier-right' src={smallCaptainEnemy} alt='soldier' />\r\n            <div className='logo-text'>BATTLESHIPS</div>\r\n          </div>\r\n\r\n          <div className={this.state.open ? `author-div open` : `author-div`}>\r\n            <div className='author' onClick={this.handleClick}>\r\n              <span>Author</span>\r\n\r\n              <img className='author-wheel' src={wheel} alt='wheel' />\r\n            </div>\r\n            <div className='author-links'>\r\n              <div className='author-link-container'>\r\n                <a className='link'>Github</a>\r\n              </div>\r\n              <div className='author-link-container'>\r\n                <a className='link'>Main Site</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default class MiddleBar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='middle-bar'>\r\n        <div className=\"middle-bar-content\">\r\n          <div className='middle'>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ShipConfiguration from './ShipConfiguration.js';\nimport GridConfiguration from './GridConfiguration.js';\nimport GridConfigurationPreview from './GridConfigurationPreview.js';\nimport Navbar from '../navbar.js';\nimport MiddleBar from '../middleBar.js';\nimport TabTitle from '../tabTitle.js';\nimport settingsIcon from '../../imgs/gear.svg';\n\n\nexport default class Setup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      advancedShipSettings: false,\n      advancedGridSettings: false\n    };\n    this.advancedShipSettingsToggle = this.advancedShipSettingsToggle.bind(this);\n    this.advancedGridSettingsToggle = this.advancedGridSettingsToggle.bind(this);\n  }\n\n  advancedShipSettingsToggle() {\n    this.setState({advancedShipSettings: !this.state.advancedShipSettings});\n  }\n\n  advancedGridSettingsToggle() {\n    this.setState({advancedGridSettings: !this.state.advancedGridSettings});\n  }\n\n  render() {\n\n    let ships,shipNames,shipConfigurations;\n\n    /*a small adjustment until i find a better way to make it\n      this component is going to be used twice(for now),\n      and he second time won't need the ship configurations */\n\n    if (this.props.currentViewedTab === 'shipsSettingsTab') {\n      ships = this.props.ships;\n      shipNames = Object.getOwnPropertyNames(ships);\n      shipConfigurations = [];\n    for (let i = 0; i < shipNames.length; i++ ) {\n      shipConfigurations.push(\n        <ShipConfiguration ship={ships[shipNames[i]]}\n                           key={shipNames[i]}\n                           hasAdvancedShipSettings={this.state.advancedShipSettings}\n                           shipChange={this.props.shipChange}/>\n\n      )\n    }\n  }\n    return (\n      <div className=\"setup-tab\">\n      <Navbar />\n      <MiddleBar>\n      {(() => {\n      switch (this.props.currentViewedTab) {\n        case 'sizeSettingsTab':\n        return (\n          <div className='setup-grid'>\n          <GridConfiguration gridChangeSize={this.props.gridChangeSize}\n                             field={this.props.field}\n                             staticValues={this.props.staticValues}\n                             startValues={this.props.startValues}\n                             changeStartValues={this.props.changeStartValues}\n                             toggleAdvancedGridSettings={this.advancedGridSettingsToggle}\n                             hasAdvancedGridSettings={this.state.advancedGridSettings}\n                             gridChangeSizeInput={this.props.gridChangeSizeInput}\n          />\n          <button onClick={() => this.props.changeCurrentViewedTab(this.props.currentViewedTab,'add')}\n                  type=\"button\">\n                  NEXT\n          </button>\n          <GridConfigurationPreview maxValues={this.props.field}\n                                    valueType={this.props.startValues.startY}\n                                    staticValues={this.props.staticValues[this.props.startValues.startY]}\n\n           />\n\n        </div>\n        )\n\n        case 'shipsSettingsTab':\n        return (\n        <div className='setup-ships'>\n          <h2>\n            SHIPS SETTINGS\n          <img className='gearIcon' src={settingsIcon} alt='Show Advanced Ship Options' onClick={this.advancedShipSettingsToggle} />\n          </h2>\n          <div className='ships-info'>\n            <div>AMOUNT</div>\n            <div>HEALTH</div>\n          </div>\n          {shipConfigurations}\n          <button onClick={() => this.props.changeCurrentViewedTab(this.props.currentViewedTab,'add')} type=\"button\" >NEXT</button>\n        </div>\n        )\n        default:\n        break;\n\n      }\n      })()}\n      </MiddleBar>\n\n\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\r\n\r\nexport default class TabTitle extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='tab-title'>{this.props.title}</div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport Navbar from '../navbar.js';\nimport MiddleBar from '../middleBar.js';\n\nexport default class WelcomeTab extends React.Component {\n\n  render() {\n    return (\n      <div className=\"welcome-tab\">\n        <Navbar />\n        <MiddleBar>\n          <h2>Welcome</h2>\n          <h2>to</h2>\n          <h2><span className='logo'>BATTLESHIPS</span></h2>\n          <p>A classic battleship game with a bit of customization:</p>\n          <ul>\n            <li>Choose maximum health of ships!</li>\n            <li>Choose maximum amount of ships!</li>\n            <li>Decide the size of the map!</li>\n          </ul>\n          <div className='info'>\n          <p>Made in REACT</p>\n          <p>With GIMP and BLENDER</p>\n          </div>\n          <button type=\"button\" onClick={() => this.props.changeCurrentViewedTab(this.props.currentViewedTab,'add')}>START</button>\n        </MiddleBar>\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\r\nimport exit from '../../imgs/exit.svg';\r\n\r\nexport default class HelpDiv extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='helper'>\r\n        <div className='helper-container'>\r\n          <div className='help-main'>\r\n            <img className='exitIcon' src={exit} alt='exit' onClick={this.props.handler} />\r\n            <h2>Game not starting?</h2>\r\n            <p>Check if all the ships are deployed from the hangar, you cannot sail away without taking all your ships!</p>\r\n            <p>You can change the direction of placing by clicking on the button \"Current Placement Direction\".</p>\r\n            <p>To relocate a ship, simply click on it on the main grid! It will return to the \"SHIPS TO DEPLOY\" box.</p>\r\n            <button onClick={this.props.handler}>GOT IT</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport GridSide from './gridSide.js';\nimport Navbar from '../navbar.js';\nimport MiddleBar from '../middleBar.js';\n\nimport HelpDiv from './helpDiv.js';\nimport questionMark from '../../imgs/question.svg';\n\nclass GridElement extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                    className=\"square\"\n                    onClick={(e) => {\n                      this.props.handleShipClick(e);\n                    }}\n                    />\n    )\n  }\n}\n\nclass GridElementShip extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                    className=\"square ship\"\n                    onClick={(e) => {\n                      this.props.handleShipClick(this.props.ship,'remove');\n                    }}\n                    />\n    )\n  }\n}\n\n\n\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      choosenShipDiv: \"\",\n      choosenShipClass: \"\",\n      deploymentDirection: \"x\",\n      shipHp: 1,\n      helpEnabled: false\n    }\n    this.assignShip = this.assignShip.bind(this);\n    this.handleShipClick = this.handleShipClick.bind(this);\n    this.handleDeploymentDirection = this.handleDeploymentDirection.bind(this);\n    this.toggleHelp = this.toggleHelp.bind(this);\n  }\n\n  //TOGGLE HELP\n  toggleHelp() {\n    this.setState({\n      helpEnabled: !this.state.helpEnabled\n    })\n  }\n\n  //AFTER CLICKING A SHIP\n  assignShip(e,x) {\n    if (typeof this.state.choosenShipDiv === 'object') {\n      this.state.choosenShipDiv.classList.remove('choosenShip');\n    }\n    e.target.classList.add('choosenShip');\n    this.setState({\n      choosenShipDiv: e.target,\n      choosenShipClass: x,\n      shipHp: x.healthNumber\n    });\n  }\n\n  //EVENT FOR ALL THE SQUARES\n  handleShipClick(x,action) {\n\n    //REMOVE SHIP FROM THE GRID ====================================================================\n    //this option is used only by the ship boxes\n\n    if (action === 'remove') {\n      this.props.handlePlayerDeployedShips(x,'remove');\n      this.setState({\n        choosenShipDiv: \"\",\n        choosenShipClass: \"\"\n      });\n    }\n\n    // ADD SHIP TO THE GRID ========================================================================\n\n    //if first, we have a selected ship, we then can proceed further with this function,\n    //it takes the data from the selected ship and tries to assign it on the grid\n\n    else if (typeof this.state.choosenShipDiv === 'object') {\n      this.state.choosenShipDiv.classList.remove('choosenShip');\n\n      //we create the HP BLOCKS inside the Ship class\n      let firstCoord = x.target.getAttribute('data-coords');\n      //Here we check for the overlapping ships === this function returns TRUE if everything is right and we can proceed further\n      if (this.state.choosenShipClass.blockSet(firstCoord, this.state.deploymentDirection, this.props.playerDeployedShips, this.props.maxValues)) {\n        //we make it deployed, therefore it will appear on the grid\n        this.state.choosenShipClass.changeValue('deployed',true);\n\n        //pushes the new ship to the main array of deployed ships\n        this.props.handlePlayerDeployedShips(this.state.choosenShipClass, 'add');\n\n      } else {\n        console.log('Action stopped, because of overlapping ships');\n      }\n\n      //we send this deployed ship higher to the App.js where it is connected to the main state\n\n\n      //reset of the values\n      this.setState({\n        choosenShipDiv: \"\",\n        choosenShipClass: \"\"\n      });\n    } else {\n\n    }\n  }\n\n  // DEPLOYMENT SETTINGS ==============================================================\n\n  handleDeploymentDirection() {\n    if (this.state.deploymentDirection === 'x') {\n      this.setState({deploymentDirection: 'y'});\n    } else {\n      this.setState({deploymentDirection: 'x'});\n    }\n  }\n\n\n\n  render() {\n    //this is how we know how many squares to the grid we need\n    let { x, y } = this.props.maxValues;\n\n    // READ ====================================\n    // FIRST, WE CREATE THE SQUARES, then we have some fun with the deployed ships array\n    // We check the squares for the coords and we replace the empty grid element\n    // With the ships healthbar, if the coords match!\n\n    let squares = [];\n    //x coordinate FOR\n    for (let i = 1; i <= x; i++) {\n      //y coordinate FOR\n      for (let j = 1; j <= y; j++) {\n          squares.push(<GridElement coordX={j}\n                                    coordY={i}\n                                    handleShipClick={this.handleShipClick}\n                                    key={`${j},${i}`}\n                                     />)\n      }\n    }\n\n    //Check every square\n    for (var z = 0; z < squares.length; z++) {\n      //getting the coords of all the squares\n      let [ squareCoordX, squareCoordY ] = squares[z].key.split(\",\");\n\n      //check every ship\n      for (let deployedShip of this.props.playerDeployedShips) {\n\n        //check every ships' hpBlocks coords\n        for (let hpBlock of deployedShip.blocks) {\n          let { x, y } = hpBlock;\n          if (x === Number(squareCoordX) && y === Number(squareCoordY)) {\n            //we create a replacement for the empty grid\n            let shipHpBar = <GridElementShip key={`${x},${y}`}\n                                             coordX={x}\n                                             coordY={y}\n                                             handleShipClick={this.handleShipClick}\n                                             ship={deployedShip}\n\n             />;\n\n            //and here we replace it\n            squares.splice(squares.indexOf(squares[z]),1,shipHpBar);\n\n\n\n          }\n          // HERE STARTS THE REAL MAGIC WHERE WE REPLACE THE GRID ELEMENTS WITH HP BAR BLOCKS\n        }\n\n\n      }\n    }\n\n\n\n\n    // SHIPS ========================================================================\n\n    let ships = [];\n    //we filter it so only the not deployed ships show in the settings\n    this.props.playerShips.filter(el => el.deployed === false).map((ship,index) => {\n      ships.push(\n        <div className=\"ship\" key={index}\n                              style={{width: `${(ship.healthNumber * 30) + ( (ship.healthNumber * 5) - 5)}px`}}\n                              onClick={(e) => this.assignShip(e,ship)}\n                              />\n      )\n      return;\n\n\n    })\n\n\n\n    let classWhenPlacing = (this.state.choosenShipDiv) ? 'grid-while-placing' : '';\n\n    // <div className=\"shipsHangar\">\n    // {deployedShips}\n    // </div>\n\n    return (\n\n    <div className='grid-tab'>\n      <Navbar />\n\n      <MiddleBar>\n      {this.state.helpEnabled && <HelpDiv handler={this.toggleHelp} />}\n      <div className='preparation'>\n       <div className='grid-wrap'>\n        <div className={`grid ${classWhenPlacing}`}\n             style={{gridTemplate:`repeat(${x}, 1fr) / repeat(${y}, 1fr)`}}\n             data-direction={this.state.deploymentDirection}\n             data-shiphp={this.state.shipHp}\n\n        >\n        <GridSide gridPosition='grid-top'\n                valueType={this.props.startValues.startY}\n                maxValues={this.props.maxValues}\n                staticValues={this.props.staticValues[this.props.startValues.startY]}\n                valuesToCheck='y'\n      />\n        <GridSide gridPosition='grid-left'\n                valueType={this.props.startValues.startX}\n                maxValues={this.props.maxValues}\n                staticValues={this.props.staticValues[this.props.startValues.startX]}\n                valuesToCheck='x'\n      />\n        {squares}\n\n         </div>\n        </div>\n        <div className=\"shipsHangar\">\n        <h2>SHIPS TO DEPLOY</h2>\n          {ships}\n        </div>\n      </div>\n      <button onClick={() => this.props.changeCurrentViewedTab(this.props.currentViewedTab,'add')}\n              disabled={(this.props.playerDeployedShips.length === this.props.playerShips.length) ? false : true}\n              type=\"button\"\n              style={{margin:'0 0 65px 30px'}}\n              >\n              START THE GAME\n      </button>\n      <img className='question-mark' src={questionMark} alt='question' onClick={this.toggleHelp} />\n\n      <button onClick={this.handleDeploymentDirection}\n              style={{margin: '0 35px'}}\n              type='button'>\n\n              Current Placement Direction: {this.state.deploymentDirection}\n      </button>\n\n\n      </MiddleBar>\n    </div>\n    )\n  }\n}\n","import React from 'react';\n\nclass GridGameEnemyElement extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let gridElement;\n\n    gridElement = <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                  className={`square squareEnemy ${this.props.additionalClass}`}\n                  onClick={(x) => this.props.handleEnemyHit(this.props.coordX, this.props.coordY)}\n                  />\n\n    return (\n      <>\n      {gridElement}\n      </>\n    )\n  }\n}\n\nclass GridGameEnemyShipElement extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let gridElement;\n\n    gridElement = <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                  className={`square squareEnemy ${this.props.additionalClass}`}\n                  onClick={(x) => this.props.handleEnemyHit(this.props.coordX, this.props.coordY, this.props.ship)}\n                  />\n\n    return (\n      <>\n      {gridElement}\n      </>\n    )\n  }\n}\n\nclass GridGameShipElement extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let gridElement;\n    //this hpbar has been hit\n    if (this.props.currentHpBlock.isHit) {\n      gridElement = (\n        <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                      className=\"square ship shipHit\"\n                      />\n      )\n    } else {\n      //if the ship is safe and has not been hit\n      gridElement = <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                    className=\"square ship\"\n                    />\n    }\n\n    return (\n      <>\n      {gridElement}\n      </>\n    )\n  }\n}\n\nexport default class GridElementGame extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div data-coords={`${this.props.coordX},${this.props.coordY}`}\n                    className={`square ${this.props.additionalClass}`}\n                    />\n    )\n  }\n}\n\nexport {\n  GridElementGame,\n  GridGameShipElement,\n  GridGameEnemyElement,\n  GridGameEnemyShipElement\n}\n","import React from 'react';\nimport {\n  GridElementGame,\n  GridGameShipElement,\n  GridGameEnemyShipElement,\n  GridGameEnemyElement\n} from './gridElementGame.js';\nimport GridSide from '../grid/gridSide.js';\n\nexport default class GridGame extends React.Component {\nconstructor(props) {\n  super(props);\n}\n\n  render() {\n    // ================================================================\n    // PLAYER OR AI\n    // ================================================================\n\n    //Deciding who's grid is it\n    //Player === visible ships and no click event\n    //Ai === no visible ships and click events\n    let gridPlayerClass;\n    let squares = [];\n\n\n    if (this.props.owner === 'player') {\n      gridPlayerClass = 'player';\n\n      // ================================================================\n      // Squares PLAYER\n      // ================================================================\n      let {x, y} = this.props.maxValues;\n\n      //x coordinate FOR\n      for (let i = 1; i <= x; i++) {\n        //y coordinate FOR\n        for (let j = 1; j <= y; j++) {\n\n          let additionalClass = '';\n          for (let checkHit of this.props.alreadyShotByAi) {\n            if (checkHit[0] === j && checkHit[1] === i) {\n              additionalClass = 'hitSquare';\n            }\n          }\n\n            squares.push(<GridElementGame coordX={j}\n                                          coordY={i}\n                                          key={`${j},${i}`}\n                                          additionalClass={additionalClass}\n                                          />)\n        }\n      }\n\n      //check for all the squares\n      for (var k = 0; k < squares.length; k++) {\n        let [ squareCoordX, squareCoordY ] = squares[k].key.split(\",\");\n      //we check all the ships\n      for (let ship of this.props.playerDeployedShips) {\n        // check all the hpblocks\n        for (let hpBlock of ship.blocks) {\n          let {x, y} = hpBlock;\n          if (x === Number(squareCoordX) && y === Number(squareCoordY)) {\n            let shipHpBar = <GridGameShipElement key={`${x},${y}`}\n                                                 coordX={x}\n                                                 coordY={y}\n                                                 currentHpBlock={hpBlock}\n                                                 handleHit={this.props.handleHit}\n                                                 ship={ship}\n            />;\n\n            squares.splice(squares.indexOf(squares[k]),1,shipHpBar);\n          }\n        }\n      }\n    }\n    } else if (this.props.owner === 'ai') {\n\n      // ================================================================\n      // Squares AI\n      // ================================================================\n      let {x, y} = this.props.maxValues;\n\n      // MAKING THE BASIC GRID\n      //x coordinate FOR\n      for (let i = 1; i <= x; i++) {\n        //y coordinate FOR\n        for (let j = 1; j <= y; j++) {\n\n          //CHECK IF HIT BEFORE\n          let additionalClass = '';\n          for (let checkHit of this.props.alreadyShotByPlayer) {\n            if (checkHit[0] === j && checkHit[1] === i) {\n              additionalClass = 'hitSquare';\n            }\n          }\n\n            //ADD TO THE GRID\n            squares.push(<GridGameEnemyElement coordX={j}\n                                          coordY={i}\n                                          key={`${j},${i}`}\n                                          handleEnemyHit={this.props.handleEnemyHit}\n                                          additionalClass={additionalClass}\n                                          />)\n        }\n      }\n\n\n      //FILLING THE GRID WITH SHIPS\n      for (var k = 0; k < squares.length; k++) {\n        let [ squareCoordX, squareCoordY ] = squares[k].key.split(\",\");\n\n        //check all the ai deployed ships\n        for (let aiDeployedShip of this.props.aiDeployedShips) {\n\n          //Checking hp blocks\n          for (let hpBar of aiDeployedShip.blocks) {\n            let {x, y} = hpBar;\n            if (x === Number(squareCoordX) && y === Number(squareCoordY)) {\n              let aiShipHpBar;\n              //IF THE BLOCK GOT HIT IN THE PAST =================================\n              if (hpBar.isHit) {\n                aiShipHpBar = <GridGameEnemyShipElement key={`${x},${y}`}\n                                                            coordX={x}\n                                                            coordY={y}\n                                                            handleEnemyHit={this.props.handleEnemyHit}\n                                                            additionalClass='shipEnemyHit hitShip'\n                                                            ship={aiDeployedShip}\n                />\n              } else {\n                //IF THE BLOCK HAS NOT BEEN HIT BEFORE ================================\n                aiShipHpBar = <GridGameEnemyShipElement key={`${x},${y}`}\n                                                            coordX={x}\n                                                            coordY={y}\n                                                            handleEnemyHit={this.props.handleEnemyHit}\n                                                            additionalClass=''\n                                                            ship={aiDeployedShip}\n                />\n              }\n\n              squares.splice(squares.indexOf(squares[k]),1,aiShipHpBar);\n            }\n          }\n        }\n\n    }\n\n      gridPlayerClass = 'ai';\n      // console.log(this.props.playerDeployedShips);\n      // console.log(this.props.aiDeployedShips);\n    }\n\n    return (\n      <>\n      <div className={`game-grid ${gridPlayerClass}`} style={{gridTemplate: `repeat(${this.props.maxValues.x}, 1fr) / repeat(${this.props.maxValues.y}, 1fr)`}}>\n       {(() => {\n\n       })()}\n       {squares}\n      </div>\n      </>\n\n\n    )\n  }\n\n}\n","import React from 'react';\n\nexport default class HistoryTab extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    let historyP = this.props.history.map((text,index) => {\n      if (text.includes('hit')) {\n        return <p className=\"hit\" key={index}>{text}</p>\n      } else {\n        return <p className=\"miss\" key={index}>{text}</p>\n      }\n    })\n    return (\n      <div className='history-tab'>\n        {historyP}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport GridGame from './gridGame.js';\nimport {CreateShipObjects} from '../SHIP_CREATOR.js';\nimport HistoryTab from './historyTab.js';\nimport Navbar from '../navbar.js';\nimport MiddleBar from '../middleBar.js';\nimport allyCaptain from '../../blender/allyNormal.png';\nimport enemyCaptain from '../../blender/enemyNormal.png';\nimport allyCaptainDefeat from '../../blender/allyScared.png';\nimport enemyCaptainDefeat from '../../blender/enemyScared.png';\n\nfunction reload() {\n  window.location.reload();\n}\n\nexport default class GameTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    //here we make a new copy of the player ships and give em to the main App state\n\n\n    for (let aiShip of this.props.aiShips) {\n        //random direction\n      let randomDirection,randomCoordX,randomCoordY;\n      do {\n        randomDirection = Math.round(Math.random()) ? 'x' : 'y';\n        randomCoordX = Math.ceil(Math.random() * this.props.maxValues.x);\n        randomCoordY = Math.ceil(Math.random() * this.props.maxValues.y);\n      } while (aiShip.blockSet(`${randomCoordX},${randomCoordY}`, randomDirection, this.props.aiDeployedShips, this.props.maxValues) === false);\n\n      if(aiShip.blockSet(`${randomCoordX},${randomCoordY}`, randomDirection, this.props.aiDeployedShips, this.props.maxValues)) {\n        this.props.handleAiShips(aiShip);\n      }\n\n\n    }\n\n    //AI SHIPS DEPLOYMENT PROCESS STARTS HERE =====================================\n    // this.props.handleAiShips(copiedShipsForAi);\n\n  }\n\n\n  render() {\n    return (\n    <div className='game-tab'>\n      <Navbar />\n      <MiddleBar>\n      <div className=\"game-div\">\n        <div className='player-window'>\n          <GridGame owner='player'\n                    playerDeployedShips={this.props.playerDeployedShips}\n                    maxValues={this.props.maxValues}\n                    handleHit={this.props.handleHit}\n\n                    alreadyShotByAi={this.props.alreadyShotByAi}\n                    alreadyShotByPlayer={this.props.alreadyShotByPlayer}\n          />\n          <h2>PLAYER</h2>\n        </div>\n        <div className='ai-window'>\n          <GridGame owner='ai'\n                    playerDeployedShips={this.props.playerDeployedShips}\n                    aiDeployedShips={this.props.aiDeployedShips}\n                    maxValues={this.props.maxValues}\n                    handleEnemyHit={this.props.handleEnemyHit}\n\n                    alreadyShotByAi={this.props.alreadyShotByAi}\n                    alreadyShotByPlayer={this.props.alreadyShotByPlayer}\n          />\n          <h2>ENEMY</h2>\n        </div>\n        {(() => {\n          if (this.props.winner !== '') {\n            return (\n              <div className='end-tab'>\n              <h2>GAME OVER</h2>\n              <h3>The winner is {this.props.winner}</h3>\n              <button style={{display: 'block'}} onClick={reload}>PLAY AGAIN?</button>\n              </div>\n            )\n          }\n        })()}\n\n\n      </div>\n      <div className='game-comment'>\n      <div className='player-face'>\n        <img className='face' src={this.props.winner === 'PLAYER' ? allyCaptain : this.props.winner === '' ? allyCaptain : allyCaptainDefeat} alt='captain-ally' />\n      </div>\n      <HistoryTab history={this.props.history} />\n       <div className='ai-face'>\n       <img className='face' src={this.props.winner === 'ENEMY' ? enemyCaptain : this.props.winner === '' ? enemyCaptain : enemyCaptainDefeat} alt='captain-enemy' />\n       </div>\n      </div>\n      </MiddleBar>\n    </div>\n  )\n  }\n}\n","import React from 'react';\nimport './scss/mainStyle.scss';\n\n//settings and constructors\nimport { SETTINGS, STATICVALUES } from './components/MAIN_SETTINGS.js';\nimport { CreateShipObjects } from './components/SHIP_CREATOR.js';\n\n//components\n\n\n//setup\nimport Setup from './components/setup/setup.js';\nimport WelcomeTab from './components/setup/WelcomeTab.js'\nimport Grid from './components/grid/grid.js';\nimport GameTab from './components/gameTab/gameTab.js';\n\nlet tabsInOrder = [ 'welcomeTab','sizeSettingsTab','shipsSettingsTab','gridTab','gameTab' ];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerShips: [],\n      playerDeployedShips: [],\n      aiShips: [],\n      aiDeployedShips: [],\n      ships: SETTINGS.ships,\n      field: SETTINGS.field,\n      startValues: SETTINGS.startValues,\n      currentViewedTab: tabsInOrder[0],\n      actionsHistory: [],\n      turn: 'player',\n      alreadyShotByAi: [],\n      alreadyShotByPlayer: [],\n      allShipsHp: 0,\n      winner: '',\n      gameEnded: false,\n    }\n    this.shipChange = this.shipChange.bind(this);\n    this.gridChangeSize = this.gridChangeSize.bind(this);\n    this.gridChangeSizeInput = this.gridChangeSizeInput.bind(this);\n    this.changeCurrentViewedTab = this.changeCurrentViewedTab.bind(this);\n    this.changeStartValues = this.changeStartValues.bind(this);\n    this.handlePlayerDeployedShips = this.handlePlayerDeployedShips.bind(this);\n    this.handleHit = this.handleHit.bind(this);\n    this.checkWinner = this.checkWinner.bind(this);\n    this.handleEnemyHit = this.handleEnemyHit.bind(this);\n    this.handleAiDeployedShips = this.handleAiDeployedShips.bind(this);\n    this.handleAiShips = this.handleAiShips.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      playerShips: CreateShipObjects(SETTINGS.ships),\n      aiShips: CreateShipObjects(SETTINGS.ships)\n    })\n  }\n\n  //CHANGING THE DATA OF ALL THE SHIPS in this method ===================================\n  shipChange(action, data, ship) {\n    let newShips = this.state.ships;\n    //adding value\n    if (action === 'add') {\n      //checking if value is not over 10 //FIXME if needed\n      if (this.state.ships[ship][data]) {\n      }\n    newShips[ship][data] += 1;\n  }\n  //subtracting value\n  else if (action === 'subtract') {\n    //making sure You can not go over minimal values\n    if ((data === 'amount' && this.state.ships[ship][data] === 0) || (data === 'health' && this.state.ships[ship][data] === 1)) {\n\n      return;\n    }\n    newShips[ship][data] -= 1;\n  }\n    this.setState({\n      ships: newShips\n\n    });\n\n    this.setState({\n      playerShips: CreateShipObjects(newShips),\n      aiShips: CreateShipObjects(newShips)\n    });\n  }\n\n  //change grid sizes with buttons  =================================== ===================================\n  gridChangeSize(option,action) {\n    if (option > 1 && action === 'subtract') {\n      return;\n    } else if ( action === 'add' && this.state.field[option] < 26) {\n      let newField = this.state.field;\n      newField[option] += 1\n      this.setState({field: newField});\n    } else if ( action === 'subtract' && this.state.field[option] > 1) {\n      let newField = this.state.field;\n      newField[option] -= 1;\n      this.setState({field: newField});\n    }\n  }\n\n  //change grid sizes by typing  =================================== ===================================\n  gridChangeSizeInput(value,coordinate) {\n    //only digits\n    if(/\\D/.test(value.target.value) || value.target.value > 25) {\n      return;\n    }\n    let newField = this.state.field;\n    newField[coordinate] = value.target.value;\n    this.setState({ field: newField});\n  }\n\n  changeCurrentViewedTab(x, action) {\n\n    //fast fix\n    if (this.state.field.x > 26 || this.state.field.y > 26) {\n      return;\n    }\n\n    let newCurrentViewedTab;\n    if (action === 'add') {\n      newCurrentViewedTab = tabsInOrder[tabsInOrder.indexOf(x) + 1];\n    } else if (action === 'subtract') {\n      newCurrentViewedTab = tabsInOrder[tabsInOrder.indexOf(x) - 1];\n    }\n\n    this.setState({currentViewedTab: newCurrentViewedTab});\n  }\n\n  //changing the A-H values and 1-10 to whatever the user chooses =================================== ===================================\n  changeStartValues(e) {\n    let newStartValues = this.state.startValues;\n    newStartValues[e.target.name] = e.target.value;\n\n    this.setState({startValues: newStartValues});\n  }\n\n  // SPAWNING SHIPS START HERE ===============================================================\n  //this is the function that stores all the ships that user puts on the starting grid\n  handlePlayerDeployedShips(x, action) {\n    if (action === 'add') {\n    let newArr = this.state.playerDeployedShips;\n    newArr.push(x);\n    this.setState({\n      playerDeployedShips: newArr\n    })\n  } else if (action === 'remove') {\n    //we make sure the ship shows up in the hangar again\n    x.deployed = false;\n    x.blocks = [];\n    //we delete it from the deployed ships array\n    let newArr = this.state.playerDeployedShips;\n    newArr.splice(newArr.indexOf(x),1);\n    this.setState({\n      playerDeployedShips: newArr\n    });\n  }\n}\n\n  //SPAWNING SHIPS FOR AI\n  handleAiShips(aiShipToDeploy) {\n    let newArr = this.state.aiDeployedShips;\n    aiShipToDeploy.deployed = true;\n    newArr.push(aiShipToDeploy);\n    this.setState({\n      aiDeployedShips: newArr\n    });\n    // this.setState({\n    // aiShips: aiShipsArr\n    // })\n  }\n\n  //DEPLOYING SHIPS FOR AI\n  handleAiDeployedShips(x, action) {\n    let newArr = this.state.aiDeployedShips;\n    newArr.push(x);\n    this.setState({\n      aiDeployedShips: newArr\n    })\n\n  }\n\n\n\n// PLAYER SHIP HIT LOGIC HERE =====================================================================\nhandleHit(ship,hpBlock) {\n  if(!hpBlock.isHit) {\n    let newArr = this.state.playerDeployedShips;\n    hpBlock.isHit = true;\n\n    this.setState({\n      playerDeployedShips: newArr\n    });\n}\n  // newArr.indexOf(ship)\n}\n\n// AI SHIP HIT LOGIC HERE (IF USER HITS) ==========================================================================\nhandleEnemyHit(x,y,ship) {\n\n  //IF GAME ENDED, NO MORE CLICKING\n  if (this.state.gameEnded) {\n    return;\n  }\n\n  //CHECK IF WE HAVENT FIRED AT THAT GRID BEFORE\n  let hitBeforeCheck = this.state.alreadyShotByPlayer.filter(el => {\n    return (el[0] === x && el[1] === y);\n  }).length;\n\n\n  if (hitBeforeCheck) {\n    return;\n  }\n\n  //if we hit a ship we get another shot\n  if (ship) {\n    //find the hpBlock that's got hit\n    let blockThatGotHit = ship.blocks.filter(block => {\n      return (block.x === x && block.y === y );\n    })[0];\n\n    //we make sure it has a hit mark\n    blockThatGotHit.isHit = true;\n\n    //check if the ship has not sunk\n    if (ship.blocks.every((x) => x.isHit === true )) {\n      console.log('the ship has sunk');\n      this.checkWinner();\n    }\n\n    //save the outcome\n    let newHistory = this.state.actionsHistory;\n    newHistory.unshift(`Player shoots and hits at ${x},${y}!`);\n\n    //so we can no longer hit it in the future\n    let newArr = this.state.alreadyShotByPlayer;\n    newArr.push( [x, y] );\n\n    this.setState({\n      turn: 'player',\n      actionsHistory: newHistory,\n      alreadyShotByPlayer: newArr\n    })\n\n\n\n  } else {\n    //IF we hit a random empty space\n\n    //save the outcome\n    let newHistory = this.state.actionsHistory;\n    newHistory.unshift(`Player misses at ${x},${y}!`);\n\n    //so we can no longer hit it in the future\n    let newArr = this.state.alreadyShotByPlayer;\n    newArr.push( [x, y] );\n\n    this.setState({\n      turn: 'ai',\n      actionsHistory: newHistory,\n      alreadyShotByPlayer: newArr\n    })\n  }\n}\n\n\n// CHECK IF ALL SHIPS HAVE SUNK\ncheckWinner() {\n\n  //no more clicking after the game is over\n  if (this.state.gameEnded) {\n    return;\n  }\n\n  //check player ships\n  //check if all player blocks have been hit\n  let allBlocksPlayer = this.state.playerDeployedShips.filter((el) => {\n    return el.blocks.every((el) => el.isHit === true);\n  });\n  if (allBlocksPlayer.length === this.state.playerDeployedShips.length) {\n    this.setState({\n      gameEnded: true,\n      winner: 'ENEMY'\n    })\n    return;\n  }\n\n  //check ai ships\n  let allBlocksAi = this.state.aiDeployedShips.filter((el) => {\n    return el.blocks.every((el) => el.isHit === true);\n  });\n\n  if (allBlocksAi.length === this.state.aiDeployedShips.length) {\n    this.setState({\n      gameEnded: true,\n      winner: 'PLAYER'\n    })\n    return;\n  }\n}\n\ncomponentDidUpdate() {\n\n  //IF GAME ENDED, NO MORE CLICKING\n  if (this.state.gameEnded) {\n    return;\n  }\n\n    //this is where the AI TURN HAPPENS\n    if (this.state.turn === 'ai') {\n      let randomX, randomY;\n\n      //make sure we don't end up in a loop\n      if (this.state.alreadyShotByAi.length === (this.state.field.x * this.state.field.y)) {\n        return;\n      }\n\n      // FIXME --- Somewhere in the project the values x and y overlapped, so for now a fast fix looks like this,\n      // just a simple swap back to reality\n      do {\n        randomX = Math.ceil(Math.random() * this.state.field.y );\n        randomY = Math.ceil(Math.random() * this.state.field.x );\n      } while (this.state.alreadyShotByAi.filter(el => (el[0] === randomX && el[1] === randomY)).length)\n\n      let newArr;\n      //check if hit any ships\n      for (let playerShip of this.state.playerDeployedShips) {\n        let hitGrid = playerShip.blocks.filter(hpBar => (hpBar.x === randomX && hpBar.y === randomY))[0];\n        //if we found it\n        if (hitGrid) {\n          hitGrid.isHit = true;\n\n          //WE MAKE SURE THOSE COORDS WONT BE HIT IN THE FUTURE SO WE SAVE THEM\n          newArr = this.state.alreadyShotByAi;\n          newArr.push( [randomX, randomY] );\n\n          //ALSO MAKINGA COMMENT ABOUT THE ACTIONS\n          let newHistory = this.state.actionsHistory;\n          newHistory.unshift(`Ai shoots and hits at ${randomX},${randomY}!`);\n\n          this.checkWinner();\n          //they hit, so now they can take another shot\n          this.setState({\n            turn: 'ai',\n            alreadyShotByAi: newArr,\n            actionsHistory: newHistory\n          })\n          return;\n        }\n      }\n\n      //WE MAKE SURE THOSE COORDS WONT BE HIT IN THE FUTURE SO WE SAVE THEM\n      newArr = this.state.alreadyShotByAi;\n      newArr.push( [randomX, randomY] );\n\n      //ALSO MAKINGA COMMENT ABOUT THE ACTIONS\n      let newHistory = this.state.actionsHistory;\n      newHistory.unshift(`Ai MISSES at ${randomX},${randomY}!`);\n\n      // console.log(`AI MISSED with coords ${randomX},${randomY}`);\n      this.setState({\n        turn: 'player',\n        alreadyShotByAi: newArr,\n        actionsHistory: newHistory\n      })\n\n    }\n}\n\n\n\n  render() {\n    let currentTab;\n    switch (this.state.currentViewedTab) {\n      case 'welcomeTab':\n        currentTab = (\n            <WelcomeTab currentViewedTab={this.state.currentViewedTab}\n                        changeCurrentViewedTab={this.changeCurrentViewedTab}\n             />\n        );\n      break;\n      case 'sizeSettingsTab':\n        currentTab = (\n          <Setup ships={this.state.ships}\n                 shipChange={this.shipChange}\n\n                 currentViewedTab={this.props.currentViewedTab}\n                 changeCurrentViewedTab={this.changeCurrentViewedTab}\n\n                 hasAdvancedSettings={this.state.advancedSettings}\n                 advancedSettingsToggle={this.advancedSettingsToggle}\n\n                 gridChangeSize={this.gridChangeSize}\n                 gridChangeSizeInput={this.gridChangeSizeInput}\n\n                 field={this.state.field}\n                 startValues={this.state.startValues}\n                 staticValues={STATICVALUES}\n                 changeStartValues={this.changeStartValues}\n\n                 currentViewedTab={this.state.currentViewedTab}\n                 changeCurrentViewedTab={this.changeCurrentViewedTab}\n\n          />\n        );\n      break;\n      case 'shipsSettingsTab':\n        currentTab = (\n          <Setup ships={this.state.ships}\n                 shipChange={this.shipChange}\n\n                 currentViewedTab={this.props.currentViewedTab}\n                 changeCurrentViewedTab={this.changeCurrentViewedTab}\n\n                 hasAdvancedSettings={this.state.advancedSettings}\n                 advancedSettingsToggle={this.advancedSettingsToggle}\n\n                 gridChangeSize={this.gridChangeSize}\n                 gridChangeSizeInput={this.gridChangeSizeInput}\n\n                 field={this.state.field}\n                 startValues={this.state.startValues}\n                 staticValues={STATICVALUES}\n                 changeStartValues={this.changeStartValues}\n\n                 currentViewedTab={this.state.currentViewedTab}\n                 changeCurrentViewedTab={this.changeCurrentViewedTab}\n\n          />\n        );\n      break;\n      case 'gridTab':\n        currentTab = (\n            <Grid maxValues={this.state.field}\n                  startValues={this.state.startValues}\n                  staticValues={STATICVALUES}\n\n                  currentViewedTab={this.state.currentViewedTab}\n                  changeCurrentViewedTab={this.changeCurrentViewedTab}\n\n                  test={this.state}\n                  playerShips={this.state.playerShips}\n\n                  playerDeployedShips={this.state.playerDeployedShips}\n                  handlePlayerDeployedShips={this.handlePlayerDeployedShips}\n\n             />\n        );\n      break;\n      case 'gameTab':\n      currentTab = (\n        <GameTab currentViewedTab={this.state.currentViewedTab}\n                 changeCurrentViewedTab={this.changeCurrentViewedTab}\n                 playerDeployedShips={this.state.playerDeployedShips}\n\n                 handleAiDeployedShips={this.handleAiDeployedShips}\n                 handleAiShips={this.handleAiShips}\n                 aiShips={this.state.aiShips}\n                 aiDeployedShips={this.state.aiDeployedShips}\n\n                 maxValues={this.state.field}\n                 startValues={this.state.startValues}\n                 staticValues={STATICVALUES}\n\n\n                 handleHit={this.handleHit}\n                 handleEnemyHit={this.handleEnemyHit}\n\n                 history={this.state.actionsHistory}\n                 winner={this.state.winner}\n\n                 alreadyShotByAi={this.state.alreadyShotByAi}\n                 alreadyShotByPlayer={this.state.alreadyShotByPlayer}\n        />\n\n      );\n      break;\n      default:\n      break;\n    }\n\n\n\n  return (\n    <div className=\"App\">\n      {currentTab}\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}